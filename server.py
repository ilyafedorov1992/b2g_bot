import os
import asyncio
from flask import Flask
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)

app = Flask(__name__)

@app.route('/')
def home():
    return '–ë–æ—Ç –∂–∏–≤–æ–π!'

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {update.message.text}")
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üéâ")

# --- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ---

async def main():
    token = os.environ.get("BOT_TOKEN")
    if not token:
        raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

    application = ApplicationBuilder().token(token).build()
    application.add_handler(CommandHandler("start", start))

    await application.initialize()
    await application.start()
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∫–æ–º–∞–Ω–¥–µ /start")
    await application.updater.start_polling()

if __name__ == '__main__':
    import threading

    threading.Thread(target=lambda: app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 5000)))).start()

    loop = asyncio.get_event_loop()
    loop.create_task(main())
    loop.run_forever()
